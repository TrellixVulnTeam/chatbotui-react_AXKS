{"ast":null,"code":"var _jsxFileName = \"/var/www/html/workspace/chatbot-ui/src/components/Navbar/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Navicon from \"../../assets/images/navigate.svg\";\nimport Searchicon from \"../../assets/images/search.svg\";\nimport clsx from \"clsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [showInput, setShowInput] = useState(false);\n  const searchRef = useRef(null); // searchref = an object\n\n  /* searchref ===  {\n  current : null\n  }  */\n\n  /* searchref = \"hello\"; */\n\n  /* searchref === {\n  Chandan: null \n  } \n  searchref = {\n  Chandan: \"Person\"} \n  searchref.Chandan = \"Person\" */\n\n  function handleShowInput() {\n    setShowInput(true);\n    setTimeout(() => {\n      searchRef.current.focus();\n    }, timeout);\n    console.log(searchRef.current);\n  }\n\n  function handleHideInput() {\n    setShowInput(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Navicon,\n          alt: \"Nav Icon\",\n          onClick: handleHideInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Activity Points\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Searchicon,\n          alt: \"Search Icon\",\n          onClick: handleShowInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: clsx(\"search-input\", {\n          \"d-none\": !showInput\n        }),\n        placeholder: \"Search by name, points or description\",\n        ref: searchRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Navbar, \"VfDPodRjf+sWc3W8ftLQvX+lnpg=\");\n\n_c = Navbar;\nNavbar.propTypes = {\n  onClickBackButton: PropTypes.func,\n  title: PropTypes.string,\n  onClickOpenSearchIcon: PropTypes.func,\n  onChangeSearchText: PropTypes.func,\n  searchText: PropTypes.string,\n  onClickClosingSearchIcon: PropTypes.func,\n  isSearch: PropTypes.bool\n};\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/var/www/html/workspace/chatbot-ui/src/components/Navbar/index.jsx"],"names":["React","useState","useRef","PropTypes","clsx","Navbar","showInput","setShowInput","searchRef","handleShowInput","setTimeout","current","focus","timeout","console","log","handleHideInput","Navicon","Searchicon","propTypes","onClickBackButton","func","title","string","onClickOpenSearchIcon","onChangeSearchText","searchText","onClickClosingSearchIcon","isSearch","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,OAAOC,IAAP,MAAiB,MAAjB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMO,SAAS,GAAGN,MAAM,CAAC,IAAD,CAAxB,CAFmB,CAEa;;AAChC;AACF;AACA;;AACE;;AACA;AACF;AACA;AACA;AACA;AACA;;AACE,WAASO,eAAT,GAA2B;AACzBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAG,IAAAA,UAAU,CAAC,MAAM;AACfF,MAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB;AACD,KAFS,EAEPC,OAFO,CAAV;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,CAACG,OAAtB;AACD;;AACD,WAASK,eAAT,GAA2B;AACzBT,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AACD,sBACE;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEU,OAAV;AAAmB,UAAA,GAAG,EAAC,UAAvB;AAAkC,UAAA,OAAO,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,GAAG,EAAEE,UAAV;AAAsB,UAAA,GAAG,EAAC,aAA1B;AAAwC,UAAA,OAAO,EAAET;AAAjD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAEL,IAAI,CAAC,cAAD,EAAiB;AAC9B,oBAAU,CAACE;AADmB,SAAjB,CAFjB;AAKE,QAAA,WAAW,EAAC,uCALd;AAME,QAAA,GAAG,EAAEE;AANP;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA7CD;;GAAMH,M;;KAAAA,M;AA8CNA,MAAM,CAACc,SAAP,GAAmB;AACjBC,EAAAA,iBAAiB,EAAEjB,SAAS,CAACkB,IADZ;AAEjBC,EAAAA,KAAK,EAAEnB,SAAS,CAACoB,MAFA;AAGjBC,EAAAA,qBAAqB,EAAErB,SAAS,CAACkB,IAHhB;AAIjBI,EAAAA,kBAAkB,EAAEtB,SAAS,CAACkB,IAJb;AAKjBK,EAAAA,UAAU,EAAEvB,SAAS,CAACoB,MALL;AAMjBI,EAAAA,wBAAwB,EAAExB,SAAS,CAACkB,IANnB;AAOjBO,EAAAA,QAAQ,EAAEzB,SAAS,CAAC0B;AAPH,CAAnB;AAUA,eAAexB,MAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Navicon from \"../../assets/images/navigate.svg\";\nimport Searchicon from \"../../assets/images/search.svg\";\nimport clsx from \"clsx\";\n\nconst Navbar = () => {\n  const [showInput, setShowInput] = useState(false);\n  const searchRef = useRef(null); // searchref = an object\n  /* searchref ===  {\ncurrent : null\n}  */\n  /* searchref = \"hello\"; */\n  /* searchref === {\nChandan: null \n} \nsearchref = {\nChandan: \"Person\"} \nsearchref.Chandan = \"Person\" */\n  function handleShowInput() {\n    setShowInput(true);\n    setTimeout(() => {\n      searchRef.current.focus();\n    }, timeout);\n\n    console.log(searchRef.current);\n  }\n  function handleHideInput() {\n    setShowInput(false);\n  }\n  return (\n    <section>\n      <div className=\"navbar-wrapper\">\n        <div>\n          <img src={Navicon} alt=\"Nav Icon\" onClick={handleHideInput} />\n        </div>\n        <div className=\"icon-wrapper\">\n          <h1>Activity Points</h1>\n          <img src={Searchicon} alt=\"Search Icon\" onClick={handleShowInput} />\n        </div>\n        <input\n          type=\"text\"\n          className={clsx(\"search-input\", {\n            \"d-none\": !showInput,\n          })}\n          placeholder=\"Search by name, points or description\"\n          ref={searchRef}\n        />\n      </div>\n    </section>\n  );\n};\nNavbar.propTypes = {\n  onClickBackButton: PropTypes.func,\n  title: PropTypes.string,\n  onClickOpenSearchIcon: PropTypes.func,\n  onChangeSearchText: PropTypes.func,\n  searchText: PropTypes.string,\n  onClickClosingSearchIcon: PropTypes.func,\n  isSearch: PropTypes.bool,\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}